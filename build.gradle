buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.2'
        classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:1.12.+'
        classpath 'org.ysb33r.gradle:gradletest:0.5.3'
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.1'
        classpath "org.ajoberstar:gradle-git:1.2.0"
    }
}
apply plugin: "org.asciidoctor.gradle.asciidoctor"
apply plugin: 'org.ajoberstar.github-pages'


group = 'com.github.jruby-gradle'
version = '0.4.1'
defaultTasks 'check', 'assemble'

if (!releaseBuild) {
    version = "${version}-SNAPSHOT"
}

subprojects {
    apply plugin: 'groovy'
    apply plugin: 'maven'
    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'org.ysb33r.gradletest'
    apply plugin: 'provided-base'
    apply from: "${rootProject.projectDir}/gradle/integration-tests.gradle"

    repositories {
        jcenter()
    }

    dependencies {
        compile gradleApi()
        compile localGroovy()
    }

    test {
        testLogging {
            showStandardStreams = true
            exceptionFormat "full"
        }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar
    }
}

task release(type: Exec) {
    description 'Create and upload a release'
    dependsOn subprojects.collect { ":${it.name}:bintrayUpload" }
    commandLine 'git', 'tag', "v${project.version}"
}


//asciidoctor {
//    separateOutputDirs false
//    attributes 'stylesheet' : 'foundation.css',
//               'stylesdir' : "${projectDir}/src/docs/asciidoc/stylesheets"
//}

//githubPages {
//    repoUri = 'git@github.com:jruby-gradle/jruby-gradle.github.io'
//    targetBranch = 'master'
//    pages {
//        from asciidoctor
//        from subprojects.collect { ":${it.name}:groovydoc" }
//    }
//}
//publishGhPages.dependsOn subprojects.collect { ":${it.name}:groovydoc" }
